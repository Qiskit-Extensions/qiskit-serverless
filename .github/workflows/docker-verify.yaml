name: Docker verify process

on:
  push:
    paths:
      - 'infrastructure/docker/**'
      - '.github/scripts/dockerfile-security.rego'
      - '.github/workflows/docker-verify.yaml'

env:
  HADOLINT_DOCKER_IMAGE: hadolint/hadolint:v2.12.0
  OPENPOLICYAGENT_DOCKER_IMAGE: openpolicyagent/conftest:v0.43.1
  TRIVY_DOCKER_IMAGE: aquasec/trivy:0.42.1

jobs:
  lint:
    strategy:
      matrix:
        dockerfile:
          [
            Dockerfile-gateway,
            Dockerfile-notebook,
            Dockerfile-ray-qiskit,
            Dockerfile-repository-server,
          ]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infrastructure/docker
    steps:
      - uses: actions/checkout@v3
      - name: Run hadolint in ${{ matrix.dockerfile }}
        run: docker run --name hadolint --rm --interactive ${{ env.HADOLINT_DOCKER_IMAGE }} < ${{ matrix.dockerfile }}
  sast:
    strategy:
      matrix:
        dockerfile:
          [
            Dockerfile-gateway,
            Dockerfile-notebook,
            Dockerfile-ray-qiskit,
            Dockerfile-repository-server,
          ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run conftest in ${{ matrix.dockerfile }}
        shell: bash
        run: |
          docker run \
          --name conftest \
          --rm --volume $GITHUB_WORKSPACE:/project ${{ env.OPENPOLICYAGENT_DOCKER_IMAGE }} \
          test --strict --parser dockerfile \
          --policy .github/scripts/dockerfile-security.rego \
          ./infrastructure/docker/${{ matrix.dockerfile }}
  vscan:
    strategy:
      matrix:
        image:
          [
            icr.io/quantum-public/quantum-serverless-gateway:latest,
            icr.io/quantum-public/quantum-serverless-notebook:latest-py38,
            icr.io/quantum-public/quantum-serverless-notebook:latest-py39,
            icr.io/quantum-public/quantum-serverless-notebook:latest-py310,
            icr.io/quantum-public/quantum-serverless-ray-node:latest-py38,
            icr.io/quantum-public/quantum-serverless-ray-node:latest-py39,
            icr.io/quantum-public/quantum-serverless-ray-node:latest-py310,
            icr.io/quantum-public/quantum-repository-server:latest,
          ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run vscan on ${{ matrix.image }}
        shell: bash
        run: |
          docker image pull ${{ matrix.image }}
          docker run --rm --name=trivy \
          --env ${{ secrets.GITHUB_TOKEN }} \
          --volume /var/run/docker.sock:/var/run/docker.sock \
          -it ${{ env.TRIVY_DOCKER_IMAGE }} image --no-progress \
          --exit-code 1 \
          --scanners vuln \
          --severity CRITICAL \
          --ignore-unfixed ${{ matrix.image }}
