# ===================
# Quantum Serverless configs
# ===================

# ===================
# Ingress Nginx controller configs
# ===================

# Ingress Nginx controller is disabled by default to not affect cloud providers' controller configuration
nginxIngressControllerEnable: false

# ===================
# Redis configs
# ===================

redisEnable: true
redis:
  architecture: "standalone"

  global:
    redis:
      password: ""

  auth:
    enabled: false

  master:
    service:
      ports:
        redis: 7000

# ===================
# Jupyter configs
# ===================

jupyterEnable: false

jupyter:
  jupyterToken: "<YOUR_JUPYTER_PASSWORD_HERE>"

  image:
    repository: "<JUPYTER_NOTEBOOK_IMAGE>"
    tag: "latest"
    pullPolicy: IfNotPresent
  
  imagePullSecrets: []

  container:
    port: 8888

  service:
    port: 80

  # If you enable it remember to enable nginx ingress controller if you need a controller for ingress
  ingress:
    enabled: false
    className: "nginx"
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    loadBalancer:
      hostname: localhost
    hosts:
      - host: localhost
        paths:
          - path: /
            pathType: Prefix


# ===================
# Ray Cluster
# ===================

rayClusterEnable: true
ray-cluster:
  nameOverride: "kuberay"
  fullnameOverride: ""

  image:
    repository: "qiskit/quantum-serverless-ray-node"
    tag: "latest"
    pullPolicy: IfNotPresent

  head:
    rayStartParams:
      dashboard-host: '0.0.0.0'

  worker:
    # If you want to disable the default workergroup
    # uncomment the line below
    # disabled: true
    replicas: 1
    type: worker

  service:
    type: ClusterIP


# ===================
# Kuberay Operator
# ===================

kuberayOperatorEnable: true
kuberay-operator:
  nameOverride: "kuberay-operator"
  fullnameOverride: "kuberay-operator"

  rbacEnable: true
  ## Install Default RBAC roles and bindings
  rbac:
    create: true
    apiVersion: v1

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: "kuberay-operator"

  service:
    type: ClusterIP
    port: 8080

  livenessProbe:
    initialDelaySeconds: 10
    periodSeconds: 5
    failureThreshold: 5

  readinessProbe:
    initialDelaySeconds: 10
    periodSeconds: 5
    failureThreshold: 5

  createCustomResource: true

  batchScheduler:
    enabled: false

# ===================
# Kuberay API Server
# ===================

kuberayApiServerEnable: true
kuberay-apiserver:
  name: "kuberay-apiserver"
  image:
    repository: kuberay/apiserver
    tag: v0.5.0
    pullPolicy: IfNotPresent

  rbacEnable: true
  ## Install Default RBAC roles and bindings
  rbac:
    create: true
    apiVersion: v1

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: "kuberay-apiserver"

  containerPort:
    - containerPort: 8888
    - containerPort: 8887

  resources:
    limits:
      cpu: 500m
      memory: 500Mi
    requests:
      cpu: 300m
      memory: 300Mi

  service:
    type: NodePort
    ports:
      - name: http
        port: 8888
        targetPort: 8888
        nodePort: 31888
      - name: rpc
        port: 8887
        targetPort: 8887
        nodePort: 31887

  ingress:
    enabled: false

  replicaCount: 1

# ===================
# Keycloak
# ===================

keycloakEnable: false
